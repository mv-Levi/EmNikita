"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.IsFile = exports.isFile = void 0;
const class_validator_1 = require("class-validator");
const StoredFile_1 = require("../../classes/storage/StoredFile");
const common_1 = require("@nestjs/common");
const class_transformer_1 = require("class-transformer");
function isFile(value) {
    return value && value instanceof StoredFile_1.StoredFile;
}
exports.isFile = isFile;
function IsFile(validationOptions) {
    const isFileValidator = (0, class_validator_1.ValidateBy)({
        name: 'IsFile',
        constraints: [],
        validator: {
            validate(value, args) {
                return isFile(value);
            },
            defaultMessage(validationArguments) {
                return `Field "${validationArguments.property}" does not contain file`;
            },
        },
    }, validationOptions);
    if (validationOptions === null || validationOptions === void 0 ? void 0 : validationOptions.each) {
        return (0, common_1.applyDecorators)((0, class_transformer_1.Transform)((params) => {
            if (!Array.isArray(params.value)) {
                return [params.value];
            }
            return params.value;
        }), isFileValidator, (0, class_validator_1.IsArray)(Object.assign({}, validationOptions || {}, { each: false })));
    }
    return isFileValidator;
}
exports.IsFile = IsFile;
//# sourceMappingURL=is-file.validator.js.map